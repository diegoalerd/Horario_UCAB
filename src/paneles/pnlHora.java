/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paneles;
import Controlador.*;
import Controlador.ListCellRenderer;
import manejoXML.*;
import javax.swing.*;
import clases.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
/**
 *
 * @author LAB_L11
 */
public class pnlHora extends javax.swing.JPanel {
        controller control = new controller();
        controlXML XML = new controlXML();
        controlXMLAE XMLAE = new controlXMLAE();
        Materia materias = new Materia();
        Actividad actividad = new Actividad();
        DefaultListModel<Materia> dlm = new DefaultListModel<Materia>();
        DefaultListModel<Actividad> dlm2 = new DefaultListModel<Actividad>();
        
        ListCellRenderer ListCellRenderer = new ListCellRenderer();
        ListCellRenderer2 ListCellRenderer2 = new ListCellRenderer2();
        String[] columna = {"HORA", "LUNES", "MARTES", "MIÃ‰RCOLES", "JUEVES", "VIERNES"};
        DefaultTableModel dtm = new DefaultTableModel(null, columna);     
    /**
     * Creates new form pnlHora
     */
    public pnlHora() {
        initComponents();
         
        llenarLista(XML);
        llenarListaAE(XMLAE);
        
        dtm.addRow(new Object[]{"7:00 A.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"8:00 A.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"9:00 A.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"10:00 A.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"11:00 A.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"12:00 A.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"1:00 P.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"2:00 P.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"3:00 P.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"4:00 P.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"5:00 P.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"6:00 P.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"7:00 P.M", " ", " ", " ", " ", " "});
        dtm.addRow(new Object[]{"8:00 P.M", " ", " ", " ", " ", " "});   
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBase = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMaterias = new javax.swing.JList<>();
        cmbSemestreChng = new javax.swing.JComboBox<>();
        btnEliminarBlq = new rsbuttom.RSButtonMetro();
        btnAgregarBlq = new rsbuttom.RSButtonMetro();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHorario = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnEliminarBlqAE = new rsbuttom.RSButtonMetro();
        btnAgregarBlqAE = new rsbuttom.RSButtonMetro();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listActividadesE = new javax.swing.JList<>();

        pnlBase.setBackground(new java.awt.Color(102, 102, 102));
        pnlBase.setForeground(new java.awt.Color(102, 102, 102));
        pnlBase.setPreferredSize(new java.awt.Dimension(1225, 999));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        listMaterias.setBackground(new java.awt.Color(153, 153, 153));
        listMaterias.setForeground(new java.awt.Color(255, 255, 255));
        listMaterias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMateriasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(listMaterias);

        cmbSemestreChng.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semestre 1", "Semestre 2", "Semestre 3", "Semestre 4", "Semestre 5" }));

        btnEliminarBlq.setBackground(new java.awt.Color(153, 153, 153));
        btnEliminarBlq.setText("Eliminar");
        btnEliminarBlq.setColorHover(new java.awt.Color(204, 204, 255));
        btnEliminarBlq.setColorNormal(new java.awt.Color(153, 153, 153));

        btnAgregarBlq.setBackground(new java.awt.Color(153, 153, 153));
        btnAgregarBlq.setText("Agregar");
        btnAgregarBlq.setColorHover(new java.awt.Color(204, 204, 255));
        btnAgregarBlq.setColorNormal(new java.awt.Color(153, 153, 153));
        btnAgregarBlq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarBlqActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Seleccione el Semestre");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Selecione la Materia");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnEliminarBlq, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAgregarBlq, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(cmbSemestreChng, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbSemestreChng, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarBlq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarBlq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tablaHorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"7:00 A.M", null, null, null, null, null},
                {"8:00 A.M", null, null, null, null, null},
                {"9:00 A.M", null, null, null, null, null},
                {"10:00 A.M", null, null, null, null, null},
                {"11:00 A.M", null, null, null, null, null},
                {"12:00 A.M", null, null, null, null, null},
                {"1:00 P.M", null, null, null, null, null},
                {"2:00 P.M", null, null, null, null, null},
                {"3:00 P.M", null, null, null, null, null},
                {"4:00 P.M", null, null, null, null, null},
                {"5:00 P.M", "", null, null, null, null},
                {"6:00 P.M", null, null, null, null, null},
                {"7:00 P.M", null, null, null, null, null},
                {"8:00 P.M", null, null, null, null, null}
            },
            new String [] {
                "HORA", "LUNES", "MARTES", "MIÃ‰RCOLES", "JUEVES", "VIERNES"
            }
        ));
        tablaHorario.setRowHeight(30);
        jScrollPane1.setViewportView(tablaHorario);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnEliminarBlqAE.setBackground(new java.awt.Color(153, 153, 153));
        btnEliminarBlqAE.setText("Eliminar");
        btnEliminarBlqAE.setColorHover(new java.awt.Color(204, 204, 255));
        btnEliminarBlqAE.setColorNormal(new java.awt.Color(153, 153, 153));
        btnEliminarBlqAE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarBlqAEActionPerformed(evt);
            }
        });

        btnAgregarBlqAE.setBackground(new java.awt.Color(153, 153, 153));
        btnAgregarBlqAE.setText("Agregar");
        btnAgregarBlqAE.setColorHover(new java.awt.Color(204, 204, 255));
        btnAgregarBlqAE.setColorNormal(new java.awt.Color(153, 153, 153));
        btnAgregarBlqAE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarBlqAEActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Actividades Extracurriculares");

        listActividadesE.setBackground(new java.awt.Color(153, 153, 153));
        listActividadesE.setForeground(new java.awt.Color(255, 255, 255));
        listActividadesE.setToolTipText("");
        listActividadesE.setAutoscrolls(false);
        listActividadesE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listActividadesEMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listActividadesE);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnEliminarBlqAE, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(btnAgregarBlqAE, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarBlqAE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarBlqAE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlBaseLayout = new javax.swing.GroupLayout(pnlBase);
        pnlBase.setLayout(pnlBaseLayout);
        pnlBaseLayout.setHorizontalGroup(
            pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBaseLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(232, Short.MAX_VALUE))
        );
        pnlBaseLayout.setVerticalGroup(
            pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBaseLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlBaseLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(376, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarBlqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarBlqActionPerformed
        // TODO add your handling code here:
        materias = listMaterias.getSelectedValue();
        llenarTablaH(XML, materias);
        dtm.fireTableDataChanged();
    }//GEN-LAST:event_btnAgregarBlqActionPerformed

    private void listMateriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMateriasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listMateriasMouseClicked

    private void btnAgregarBlqAEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarBlqAEActionPerformed
        // TODO add your handling code here:
        actividad = listActividadesE.getSelectedValue();
        llenarTablaH2(XMLAE, actividad);
        dtm.fireTableDataChanged();
    }//GEN-LAST:event_btnAgregarBlqAEActionPerformed

    private void listActividadesEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listActividadesEMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_listActividadesEMouseClicked

    private void btnEliminarBlqAEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarBlqAEActionPerformed
        // TODO add your handling code here:
         actividad = listActividadesE.getSelectedValue();
        borrarTablaH2(XMLAE, actividad);
        dtm.fireTableDataChanged();
    }//GEN-LAST:event_btnEliminarBlqAEActionPerformed

    private void llenarLista(controlXML datosXML){
        ArrayList<Materia> datosP = datosXML.listaMaterias();
        for(Materia M : datosP){
                dlm.addElement(M);
        }
        listMaterias.setCellRenderer(ListCellRenderer);
        listMaterias.setModel(dlm);
    }
  
     private void llenarListaAE(controlXMLAE datosXMLAE){
        ArrayList<Actividad> datosA = datosXMLAE.listaAExtraxml();
        for(Actividad A : datosA){
                dlm2.addElement(A);
        }
        listActividadesE.setCellRenderer(ListCellRenderer2);
        listActividadesE.setModel(dlm2);
    }
   
    private void llenarTablaH(controlXML datosXML, Materia mat){

            
        ArrayList<Materia> datosM = datosXML.listaMaterias();
        for(Materia M : datosM){
                if(M.getNrc() == mat.getNrc()){                  //si el dato que recorre la lista es igual al nrc del parametro introducido
                    for (int i = 0; i < 6; i++){                                 //columnas
                        for(int j = 0; j < 14; j++){               //filas
                            if(mat.getDia1().equalsIgnoreCase(dtm.getColumnName(i))){     //si el dato que recorre la lista es igual al dia del parametro introducido
                                if(mat.getHoraI1().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){             //si las horas coinciden
                                    dtm.setValueAt(mat.getMateria(), j, i);
                                }
                                if(mat.getHoraF1().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(mat.getNrc(), j-1, i);
                                }
                            }
                            else if(mat.getDia2().equalsIgnoreCase(dtm.getColumnName(i))){
                                if(mat.getHoraI2().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(mat.getMateria(), j, i);
                                    }
                                
                                if(mat.getHoraF2().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(mat.getNrc(), j-1, i);
                                    }
                                
                            }
                            else if(mat.getDia3().equalsIgnoreCase(dtm.getColumnName(i))){
                                if(mat.getHoraI3().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(M.getMateria(), j, i);
                                    }
                                
                                if(mat.getHoraF3().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(mat.getNrc(), j-1, i);
                                    }
                            }
                        }
                    }
                }
        }
        tablaHorario.setModel(dtm);
    }
     
         private void llenarTablaH2(controlXMLAE datosXMLAE, Actividad Act){
        ArrayList<Actividad> datosAE = datosXMLAE.listaAExtraxml();
        for(Actividad A : datosAE){
                if(A.getNroActividadE() == Act.getNroActividadE()){                  //si el dato que recorre la lista es igual al nrc del parametro introducido
                    for (int i = 0; i < 6; i++){                                 //columnas
                        for(int j = 0; j < 14; j++){               //filas
                            if(Act.getDiaE1().equalsIgnoreCase(dtm.getColumnName(i))){     //si el dato que recorre la lista es igual al dia del parametro introducido
                                if(Act.getHoraIE1().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){             //si las horas coinciden
                                    dtm.setValueAt(Act.getNroActividadE(), j, i);
                                }
                                if(Act.getHoraFE1().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(Act.getNombreAExtra(), j-1, i);
                                }
                            }
                            else if(Act.getDiaE2().equalsIgnoreCase(dtm.getColumnName(i))){
                                if(Act.getHoraIE2().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(Act.getNroActividadE(), j, i);
                                    }
                                
                                if(Act.getHoraFE2().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(Act.getNombreAExtra(), j-1, i);
                                    }
                            }
                            else if(Act.getDiaE3().equalsIgnoreCase(dtm.getColumnName(i))){
                                if(Act.getHoraIE3().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(Act.getNroActividadE(), j, i);
                                    }
                                
                                if(Act.getHoraFE3().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(Act.getNombreAExtra(), j-1, i);
                                    }
                            }
                             else if(Act.getDiaE4().equalsIgnoreCase(dtm.getColumnName(i))){
                                if(Act.getHoraIE4().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(Act.getNroActividadE(), j, i);
                                    }
                                
                                if(Act.getHoraFE4().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(Act.getNombreAExtra(), j-1, i);
                                    }
                            }
                             else if(Act.getDiaE5().equalsIgnoreCase(dtm.getColumnName(i))){
                                if(Act.getHoraIE5().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(Act.getNroActividadE(), j, i);
                                    }
                                
                                if(Act.getHoraFE5().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(Act.getNombreAExtra(), j-1, i);
                                    }
                            }
                           
                        }
                    }
                }
        }
        tablaHorario.setModel(dtm);     
  }
         
        private void borrarTablaH2(controlXMLAE datosXMLAE, Actividad Act){
        ArrayList<Actividad> datosAE = datosXMLAE.listaAExtraxml();
        for(Actividad A : datosAE){
                if(A.getNroActividadE() == Act.getNroActividadE()){                  //si el dato que recorre la lista es igual al nrc del parametro introducido
                    for (int i = 0; i < 6; i++){                                 //columnas
                        for(int j = 0; j < 14; j++){               //filas
                            if(Act.getDiaE1().equalsIgnoreCase(dtm.getColumnName(i))){     //si el dato que recorre la lista es igual al dia del parametro introducido
                                if(Act.getHoraIE1().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){             //si las horas coinciden
                                    dtm.setValueAt(" ", j, i);
                                }
                                if(Act.getHoraFE1().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(" ", j-1, i);
                                }
                            }
                            else if(Act.getDiaE2().equalsIgnoreCase(dtm.getColumnName(i))){
                                if(Act.getHoraIE2().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(" ", j, i);
                                    }
                                
                                if(Act.getHoraFE2().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(" ", j-1, i);
                                    }
                            }
                            else if(Act.getDiaE3().equalsIgnoreCase(dtm.getColumnName(i))){
                                if(Act.getHoraIE3().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(" ", j, i);
                                    }
                                
                                if(Act.getHoraFE3().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(" ", j-1, i);
                                    }
                            }
                             else if(Act.getDiaE4().equalsIgnoreCase(dtm.getColumnName(i))){
                                if(Act.getHoraIE4().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(" ", j, i);
                                    }
                                
                                if(Act.getHoraFE4().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(" ", j-1, i);
                                    }
                            }
                             else if(Act.getDiaE5().equalsIgnoreCase(dtm.getColumnName(i))){
                                if(Act.getHoraIE5().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(" ", j, i);
                                    }
                                
                                if(Act.getHoraFE5().equalsIgnoreCase(dtm.getValueAt(j, 0).toString())){
                                    dtm.setValueAt(" ", j-1, i);
                                    }
                            }
                           
                        }
                    }
                }
        }
        tablaHorario.setModel(dtm);      
  }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rsbuttom.RSButtonMetro btnAgregarBlq;
    private rsbuttom.RSButtonMetro btnAgregarBlqAE;
    private rsbuttom.RSButtonMetro btnEliminarBlq;
    private rsbuttom.RSButtonMetro btnEliminarBlqAE;
    private javax.swing.JComboBox<String> cmbSemestreChng;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<Actividad> listActividadesE;
    private javax.swing.JList<Materia> listMaterias;
    private javax.swing.JPanel pnlBase;
    private javax.swing.JTable tablaHorario;
    // End of variables declaration//GEN-END:variables
}
